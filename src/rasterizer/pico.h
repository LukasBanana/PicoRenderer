/*
 * pico.h
 * 
 * This file is part of the "PicoRenderer" (Copyright (c) 2014 by Lukas Hermanns)
 * See "LICENSE.txt" for license information.
 */

#ifndef __PR_PICO_H__
#define __PR_PICO_H__


#include "types.h"
#include "error_ids.h"


// --- common --- //

//! Returns the last error. By default PR_ERROR_NONE.
PRenum prGetError();

//! Initializes the pico renderer.
PRboolean prInit();

//! Releases the pico renderer.
PRboolean prRelease();

// --- framebuffer --- //

/**
Generates a new framebuffer. At least one framebuffer is required to render anything.
\param[in] width Specifies the framebuffer width.
\param[in] height Specifies the framebuffer height.
\return Framebuffer ID.
\remarks The framebuffer must be deleted with 'prDeleteFramebuffer'.
\see prDeleteFramebuffer
*/
PRuint prGenFramebuffer(PRuint width, PRuint height);

/**
Deletes the specified framebuffer.
\param[in] framebufferID Specifies the framebuffer which is to be deleted.
This must be an ID generated by 'prGenFramebuffer'.
\see prGenFramebuffer
*/
void prDeleteFramebuffer(PRuint framebufferID);

// --- vertexbuffer --- //

/**
Generates a new vertexbuffer with the specified number of vertices.
\param[in] numVertices Specifies the number of vertices for this vertexbuffer.
\return Vertexbuffer ID.
\remarks The vertexbuffer must be deleted with 'prDeleteVertexbuffer'.
\see prDeleteVertexbuffer
*/
PRuint prGenVertexbuffer(PRsizei numVertices);

/**
Deletes the specified vertexbuffer.
\param[in] vertexbufferID Specifies the vertexbuffer which is to be deleted.
This must be an ID generated by 'prGenVertexbuffer'.
\see prGenVertexbuffer
*/
void prDeleteVertexbuffer(PRuint vertexbufferID);

// --- indexbuffer --- //

/**
Generates a new indexbuffer with the specified number of indices.
\param[in] numIndices Specifies the number of indices for this indexbuffer.
\return Indexbuffer ID.
\remarks The indexbuffer must be deleted with 'prDeleteIndexbuffer'.
\see prDeleteIndexbuffer
*/
PRuint prGenIndexbuffer(PRsizei numIndices);

/**
Deletes the specified indexbuffer.
\param[in] indexbufferID Specifies the indexbuffer which is to be deleted.
This must be an ID generated by 'prGenIndexbuffer'.
\see prGenIndexbuffer
*/
void prDeleteIndexbuffer(PRuint indexbufferID);

// --- drawing --- //

/**
Draws the specified amount of primitives.
\param[in] primitives Specifies the primitive types. This must be PR_PRIMITIVE_...
\param[in] numVertices Specifies the number of vertices to draw.
\param[in] firstVertex Specifies the first vertex to draw.
\remarks A vertexbuffer must be bound.
\see prBindVertexbuffer
*/
void prDraw(PRenum primitives, PRuint numVertices, PRuint firstVertex);

/**
Draws the specified amount of primitives.
\param[in] primitives Specifies the primitive types. This must be PR_PRIMITIVE_...
\param[in] numVertices Specifies the number of vertices to draw.
\param[in] firstVertex Specifies the first vertex to draw.
\remarks A vertexbuffer and an indexbuffer must be bound.
\see prBindVertexbuffer
\see prBindIndexbuffer
*/
void prDrawIndexed(PRenum primitives, PRuint numVertices, PRuint firstVertex);


#endif
